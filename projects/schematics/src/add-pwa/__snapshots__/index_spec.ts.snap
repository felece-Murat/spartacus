// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Spartacus Schematics: add-pwa should add PWA properly should modify angular.json 1`] = `
"{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "schematics-test": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        }
      },
      "root": "projects/schematics-test",
      "sourceRoot": "projects/schematics-test/src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/schematics-test",
            "index": "projects/schematics-test/src/index.html",
            "main": "projects/schematics-test/src/main.ts",
            "polyfills": "projects/schematics-test/src/polyfills.ts",
            "tsConfig": "projects/schematics-test/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "projects/schematics-test/src/favicon.ico",
              "projects/schematics-test/src/assets",
              "projects/schematics-test/src/manifest.webmanifest"
            ],
            "styles": [
              "projects/schematics-test/src/styles.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "node_modules/"
              ]
            },
            "serviceWorker": true,
            "ngswConfigPath": "projects/schematics-test/ngsw-config.json"
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "2.5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "projects/schematics-test/src/environments/environment.ts",
                  "with": "projects/schematics-test/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "schematics-test:build:production"
            },
            "development": {
              "browserTarget": "schematics-test:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "schematics-test:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "projects/schematics-test/src/test.ts",
            "polyfills": "projects/schematics-test/src/polyfills.ts",
            "tsConfig": "projects/schematics-test/tsconfig.spec.json",
            "karmaConfig": "projects/schematics-test/karma.conf.js",
            "inlineStyleLanguage": "scss",
            "assets": [
              "projects/schematics-test/src/favicon.ico",
              "projects/schematics-test/src/assets",
              "projects/schematics-test/src/manifest.webmanifest"
            ],
            "styles": [
              "projects/schematics-test/src/styles.scss"
            ],
            "scripts": [],
            "stylePreprocessorOptions": {
              "includePaths": [
                "node_modules/"
              ]
            }
          }
        }
      }
    }
  }
}"
`;

exports[`Spartacus Schematics: add-pwa should add PWA properly should modify package.json 1`] = `
"{
  "name": "workspace",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "build": "ng build",
    "watch": "ng build --watch --configuration development",
    "test": "ng test"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^14.2.0",
    "@angular/common": "^14.2.0",
    "@angular/compiler": "^14.2.0",
    "@angular/core": "^14.2.0",
    "@angular/forms": "^14.2.0",
    "@angular/platform-browser": "^14.2.0",
    "@angular/platform-browser-dynamic": "^14.2.0",
    "@angular/router": "^14.2.0",
    "@angular/service-worker": "^14.2.3",
    "@ng-select/ng-select": "^9.0.2",
    "@ngrx/effects": "^14.3.0",
    "@ngrx/router-store": "^14.3.0",
    "@ngrx/store": "^14.3.0",
    "@spartacus/assets": "~4.1.0-next.0",
    "@spartacus/core": "~4.1.0-next.0",
    "@spartacus/storefront": "~4.1.0-next.0",
    "@spartacus/styles": "~4.1.0-next.0",
    "angular-oauth2-oidc": "^13.0.1",
    "bootstrap": "^4.6.1",
    "i18next": "^21.9.1",
    "i18next-http-backend": "^1.4.1",
    "ngx-infinite-scroll": "^14.0.0",
    "rxjs": "^6.6.0",
    "tslib": "^2.3.0",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^14.2.3",
    "@angular/cli": "~0.5.0",
    "@angular/compiler-cli": "^14.2.0",
    "@types/jasmine": "~4.0.0",
    "jasmine-core": "~4.3.0",
    "karma": "~6.4.0",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage": "~2.2.0",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "~2.0.0",
    "typescript": "~4.7.2"
  }
}
"
`;

exports[`Spartacus Schematics: add-pwa should add PWA properly should not touch app.module.ts 1`] = `
"import { HttpClientModule } from "@angular/common/http";
import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser';
import { EffectsModule } from "@ngrx/effects";
import { StoreModule } from "@ngrx/store";
import { AppRoutingModule } from "@spartacus/storefront";
import { AppComponent } from './app.component';
import { SpartacusModule } from './spartacus/spartacus.module';

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    HttpClientModule,
    AppRoutingModule,
    StoreModule.forRoot({}),
    EffectsModule.forRoot([]),
    SpartacusModule,
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }
"
`;
